{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"name":"Tensorflow 2.0 - CNN (basic example)","provenance":[{"file_id":"11eF0dRN2zWmXeBI3vQa2OTE-gzRp3Q7o","timestamp":1567624450831}],"collapsed_sections":[]},"kernelspec":{"name":"python3","display_name":"Python 3"},"accelerator":"GPU"},"cells":[{"cell_type":"markdown","metadata":{"id":"zJMS8p3wfPXO","colab_type":"text"},"source":["## Installing dependencies and notebook gpu setup"]},{"cell_type":"markdown","metadata":{"id":"lRHFdNYAfWKJ","colab_type":"text"},"source":["## Importing dependencies for the project"]},{"cell_type":"code","metadata":{"id":"tS5xFeQwe9Xu","colab_type":"code","colab":{}},"source":["import tensorflow as tf\n","import matplotlib.pyplot as plt\n","\n","from tensorflow.keras.datasets import cifar10\n","\n","%matplotlib inline\n","tf.__version__"],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"e8zYubaPfy-S","colab_type":"text"},"source":["## Dataset preprocessing"]},{"cell_type":"markdown","metadata":{"id":"AOAGjiPogF0w","colab_type":"text"},"source":["### Loading the Cifar10 dataset"]},{"cell_type":"code","metadata":{"id":"v1N6LbS-e9a1","colab_type":"code","colab":{}},"source":["#Setting class names for the dataset\n","class_names = ['airplane', 'automobile', 'bird', 'cat', 'deer', 'dog', 'frog', 'horse', 'ship', 'truck']"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"f13-8-m_fqKP","colab_type":"code","colab":{}},"source":["#Loading the dataset\n","(X_train, y_train), (X_test, y_test) = cifar10.load_data()"],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"XqDIpsJWgUkz","colab_type":"text"},"source":["### Image normalization"]},{"cell_type":"code","metadata":{"id":"-QFncPlpgNmU","colab_type":"code","colab":{}},"source":["X_train = X_train / 255.0"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"L1rFHX67gc6G","colab_type":"code","colab":{}},"source":["X_train.shape"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"Ve2WbRGWgc3I","colab_type":"code","colab":{}},"source":["X_test = X_test / 255.0"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"7jwvNZ82gh9d","colab_type":"code","colab":{}},"source":["plt.imshow(X_test[10])"],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"HXiuZulIguyf","colab_type":"text"},"source":["## Building a Convolutional neural network"]},{"cell_type":"markdown","metadata":{"id":"ZFTetk8ngy0f","colab_type":"text"},"source":["### Defining the model"]},{"cell_type":"code","metadata":{"id":"1TR0JGP5gq2i","colab_type":"code","colab":{}},"source":["model = tf.keras.models.Sequential()"],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"j92d4FE0hTZV","colab_type":"text"},"source":["### Adding the first CNN Layer\n","\n","CNN layer hyper-parameters:\n","- filters: 32\n","- kernel_size:3\n","- padding: same\n","- activation: relu\n","- input_shape: (32, 32, 3)\n"]},{"cell_type":"code","metadata":{"id":"LSkL1iOvg_dE","colab_type":"code","colab":{}},"source":["model.add(tf.keras.layers.Conv2D(filters=32, kernel_size=3, padding=\"same\", activation=\"relu\", input_shape=[32, 32, 3]))"],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"gfRAaRmWiSlZ","colab_type":"text"},"source":["### Adding the second CNN Layer and max pool layer\n","\n","CNN layer hyper-parameters:\n","- filters: 32\n","- kernel_size:3\n","- padding: same\n","- activation: relu\n","\n","MaxPool layer hyper-parameters:\n","- pool_size: 2\n","- strides: 2\n","- padding: valid"]},{"cell_type":"code","metadata":{"id":"sSl7Es5yidMp","colab_type":"code","colab":{}},"source":["model.add(tf.keras.layers.Conv2D(filters=32, kernel_size=3, padding=\"same\", activation=\"relu\"))"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"wmP9h5wliAR6","colab_type":"code","colab":{}},"source":["model.add(tf.keras.layers.MaxPool2D(pool_size=2, strides=2, padding='valid'))"],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"wd8ERDyvin-0","colab_type":"text"},"source":["### Adding the third CNN Layer\n","\n","CNN layer hyper-parameters:\n","\n","    filters: 64\n","    kernel_size:3\n","    padding: same\n","    activation: relu\n","    input_shape: (32, 32, 3)\n"]},{"cell_type":"code","metadata":{"id":"i9HWy6aFixEw","colab_type":"code","colab":{}},"source":["model.add(tf.keras.layers.Conv2D(filters=64, kernel_size=3, padding=\"same\", activation=\"relu\"))"],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"O55kyOQGi44V","colab_type":"text"},"source":["###  Adding the fourth CNN Layer and max pool layer\n","\n","CNN layer hyper-parameters:\n","\n","    filters: 64\n","    kernel_size:3\n","    padding: same\n","    activation: relu\n","\n","MaxPool layer hyper-parameters:\n","\n","    pool_size: 2\n","    strides: 2\n","    padding: valid\n"]},{"cell_type":"code","metadata":{"id":"5b7vAuhjjCF2","colab_type":"code","colab":{}},"source":["model.add(tf.keras.layers.Conv2D(filters=64, kernel_size=3, padding=\"same\", activation=\"relu\"))"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"oc493G2BjFhg","colab_type":"code","colab":{}},"source":["model.add(tf.keras.layers.MaxPool2D(pool_size=2, strides=2, padding='valid'))"],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"-hGnR3aXjKbZ","colab_type":"text"},"source":["### Adding the Flatten layer"]},{"cell_type":"code","metadata":{"id":"QLzu2cCVjI5Z","colab_type":"code","colab":{}},"source":["model.add(tf.keras.layers.Flatten())"],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"GpeRUvVWjR1W","colab_type":"text"},"source":["### Adding the first Dense layer\n","\n","Dense layer hyper-parameters:\n","- units/neurons: 128\n","- activation: relu"]},{"cell_type":"code","metadata":{"id":"FWzYY8kKjhnZ","colab_type":"code","colab":{}},"source":["model.add(tf.keras.layers.Dense(units=128, activation='relu'))"],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"UaakKTqRjrkF","colab_type":"text"},"source":["### Adding the second Dense layer (output layer)\n","\n","Dense layer hyper-parameters:\n","\n"," - units/neurons: 10 (number of classes)\n"," - activation: softmax\n"]},{"cell_type":"code","metadata":{"id":"4t-JmzRvjnBj","colab_type":"code","colab":{}},"source":["model.add(tf.keras.layers.Dense(units=10, activation='softmax'))"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"aRr3bCU-ti06","colab_type":"code","colab":{}},"source":["model.summary()"],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"DYgvbNihtprw","colab_type":"text"},"source":["### Compiling the model\n","\n","#### sparse_categorical_accuracy\n","sparse_categorical_accuracy checks to see if the maximal true value is equal to the index of the maximal predicted value.\n","\n","https://stackoverflow.com/questions/44477489/keras-difference-between-categorical-accuracy-and-sparse-categorical-accuracy "]},{"cell_type":"code","metadata":{"id":"oYHELxz4tsa-","colab_type":"code","colab":{}},"source":["model.compile(loss=\"sparse_categorical_crossentropy\",\n","              optimizer=\"Adam\", metrics=[\"sparse_categorical_accuracy\"])"],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"Gox3SmwUtwgX","colab_type":"text"},"source":["### Training the model"]},{"cell_type":"code","metadata":{"id":"D3MHvRYKe9fN","colab_type":"code","colab":{}},"source":["model.fit(X_train, y_train, epochs=5)"],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"D8C7Pm0NuOrJ","colab_type":"text"},"source":["### Model evaluation and prediction"]},{"cell_type":"code","metadata":{"id":"Z9r8TtNet3D0","colab_type":"code","colab":{}},"source":["test_loss, test_accuracy = model.evaluate(X_test, y_test)"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"0rpAPpfzuV0p","colab_type":"code","colab":{}},"source":["print(\"Test accuracy: {}\".format(test_accuracy))"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"VSKfLqi5urEh","colab_type":"code","colab":{}},"source":[""],"execution_count":null,"outputs":[]}]}